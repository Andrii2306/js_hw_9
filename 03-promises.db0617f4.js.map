{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAIpCJ,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAdWJ,SAASC,cAAc,yBAkB/BU,iBAAiB,SAE3B,SAAiBC,GACfA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOf,SAASC,cAAc,uBAAuBe,OAC3DC,EAAOF,OAAOf,SAASC,cAAc,sBAAsBe,OAC3DE,EAASH,OAAOf,SAASC,cAAc,wBAAwBe,OAE5DG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDjB,EAAciB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,QAAQC,IAAI,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OAC1DqB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCH,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAGjDwB,OAAM,SAAAP,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,QAAQC,IAAI,sBAAuCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,OACzDqB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAqCL,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAIjDU,GAASG,EAGXT,YAAW,WACTT,EAAK+B,O,GACI,EAARhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst submitBtn = document.querySelector('button[type = submit]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nsubmitBtn.addEventListener('click', onClick);\n\nfunction onClick(event) {\n  event.preventDefault();\n\n  let delay = Number(document.querySelector('input[name = delay]').value);\n  const step = Number(document.querySelector('input[name = step]').value);\n  const amount = Number(document.querySelector('input[name = amount]').value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n\n  setTimeout(() => {\n    form.reset();\n  }, delay * 2);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","delay1","Number","value","step","amount","position1","then","param","console","log","concat","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.db0617f4.js.map"}